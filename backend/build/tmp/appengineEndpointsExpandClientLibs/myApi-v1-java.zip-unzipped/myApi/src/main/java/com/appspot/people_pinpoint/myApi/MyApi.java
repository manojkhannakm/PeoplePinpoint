/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-02-18 22:11:37 UTC)
 * on 2016-03-18 at 11:52:29 UTC 
 * Modify at your own risk.
 */

package com.appspot.people_pinpoint.myApi;

/**
 * Service definition for MyApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link MyApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class MyApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.21.0 of the myApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://people-pinpoint.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "myApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public MyApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  MyApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "acceptPerson".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link AcceptPerson#execute()} method to invoke the remote operation.
   *
   * @param clientId
   * @param localPersonId
   * @param personId
   * @return the request
   */
  public AcceptPerson acceptPerson(java.lang.String clientId, java.lang.Long localPersonId, java.lang.Long personId) throws java.io.IOException {
    AcceptPerson result = new AcceptPerson(clientId, localPersonId, personId);
    initialize(result);
    return result;
  }

  public class AcceptPerson extends MyApiRequest<com.appspot.people_pinpoint.myApi.model.Person> {

    private static final String REST_PATH = "acceptPerson/{clientId}/{localPersonId}/{personId}";

    /**
     * Create a request for the method "acceptPerson".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link AcceptPerson#execute()} method to invoke the remote operation. <p>
     * {@link
     * AcceptPerson#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param clientId
     * @param localPersonId
     * @param personId
     * @since 1.13
     */
    protected AcceptPerson(java.lang.String clientId, java.lang.Long localPersonId, java.lang.Long personId) {
      super(MyApi.this, "POST", REST_PATH, null, com.appspot.people_pinpoint.myApi.model.Person.class);
      this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
      this.localPersonId = com.google.api.client.util.Preconditions.checkNotNull(localPersonId, "Required parameter localPersonId must be specified.");
      this.personId = com.google.api.client.util.Preconditions.checkNotNull(personId, "Required parameter personId must be specified.");
    }

    @Override
    public AcceptPerson setAlt(java.lang.String alt) {
      return (AcceptPerson) super.setAlt(alt);
    }

    @Override
    public AcceptPerson setFields(java.lang.String fields) {
      return (AcceptPerson) super.setFields(fields);
    }

    @Override
    public AcceptPerson setKey(java.lang.String key) {
      return (AcceptPerson) super.setKey(key);
    }

    @Override
    public AcceptPerson setOauthToken(java.lang.String oauthToken) {
      return (AcceptPerson) super.setOauthToken(oauthToken);
    }

    @Override
    public AcceptPerson setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AcceptPerson) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AcceptPerson setQuotaUser(java.lang.String quotaUser) {
      return (AcceptPerson) super.setQuotaUser(quotaUser);
    }

    @Override
    public AcceptPerson setUserIp(java.lang.String userIp) {
      return (AcceptPerson) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String clientId;

    /**

     */
    public java.lang.String getClientId() {
      return clientId;
    }

    public AcceptPerson setClientId(java.lang.String clientId) {
      this.clientId = clientId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long localPersonId;

    /**

     */
    public java.lang.Long getLocalPersonId() {
      return localPersonId;
    }

    public AcceptPerson setLocalPersonId(java.lang.Long localPersonId) {
      this.localPersonId = localPersonId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long personId;

    /**

     */
    public java.lang.Long getPersonId() {
      return personId;
    }

    public AcceptPerson setPersonId(java.lang.Long personId) {
      this.personId = personId;
      return this;
    }

    @Override
    public AcceptPerson set(String parameterName, Object value) {
      return (AcceptPerson) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addPerson".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link AddPerson#execute()} method to invoke the remote operation.
   *
   * @param clientId
   * @param localPersonId
   * @param personId
   * @return the request
   */
  public AddPerson addPerson(java.lang.String clientId, java.lang.Long localPersonId, java.lang.Long personId) throws java.io.IOException {
    AddPerson result = new AddPerson(clientId, localPersonId, personId);
    initialize(result);
    return result;
  }

  public class AddPerson extends MyApiRequest<com.appspot.people_pinpoint.myApi.model.Person> {

    private static final String REST_PATH = "addPerson/{clientId}/{localPersonId}/{personId}";

    /**
     * Create a request for the method "addPerson".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link AddPerson#execute()} method to invoke the remote operation. <p>
     * {@link
     * AddPerson#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param clientId
     * @param localPersonId
     * @param personId
     * @since 1.13
     */
    protected AddPerson(java.lang.String clientId, java.lang.Long localPersonId, java.lang.Long personId) {
      super(MyApi.this, "POST", REST_PATH, null, com.appspot.people_pinpoint.myApi.model.Person.class);
      this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
      this.localPersonId = com.google.api.client.util.Preconditions.checkNotNull(localPersonId, "Required parameter localPersonId must be specified.");
      this.personId = com.google.api.client.util.Preconditions.checkNotNull(personId, "Required parameter personId must be specified.");
    }

    @Override
    public AddPerson setAlt(java.lang.String alt) {
      return (AddPerson) super.setAlt(alt);
    }

    @Override
    public AddPerson setFields(java.lang.String fields) {
      return (AddPerson) super.setFields(fields);
    }

    @Override
    public AddPerson setKey(java.lang.String key) {
      return (AddPerson) super.setKey(key);
    }

    @Override
    public AddPerson setOauthToken(java.lang.String oauthToken) {
      return (AddPerson) super.setOauthToken(oauthToken);
    }

    @Override
    public AddPerson setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddPerson) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddPerson setQuotaUser(java.lang.String quotaUser) {
      return (AddPerson) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddPerson setUserIp(java.lang.String userIp) {
      return (AddPerson) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String clientId;

    /**

     */
    public java.lang.String getClientId() {
      return clientId;
    }

    public AddPerson setClientId(java.lang.String clientId) {
      this.clientId = clientId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long localPersonId;

    /**

     */
    public java.lang.Long getLocalPersonId() {
      return localPersonId;
    }

    public AddPerson setLocalPersonId(java.lang.Long localPersonId) {
      this.localPersonId = localPersonId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long personId;

    /**

     */
    public java.lang.Long getPersonId() {
      return personId;
    }

    public AddPerson setPersonId(java.lang.Long personId) {
      this.personId = personId;
      return this;
    }

    @Override
    public AddPerson set(String parameterName, Object value) {
      return (AddPerson) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "cancelPerson".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link CancelPerson#execute()} method to invoke the remote operation.
   *
   * @param clientId
   * @param localPersonId
   * @param personId
   * @return the request
   */
  public CancelPerson cancelPerson(java.lang.String clientId, java.lang.Long localPersonId, java.lang.Long personId) throws java.io.IOException {
    CancelPerson result = new CancelPerson(clientId, localPersonId, personId);
    initialize(result);
    return result;
  }

  public class CancelPerson extends MyApiRequest<com.appspot.people_pinpoint.myApi.model.Person> {

    private static final String REST_PATH = "cancelPerson/{clientId}/{localPersonId}/{personId}";

    /**
     * Create a request for the method "cancelPerson".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link CancelPerson#execute()} method to invoke the remote operation. <p>
     * {@link
     * CancelPerson#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param clientId
     * @param localPersonId
     * @param personId
     * @since 1.13
     */
    protected CancelPerson(java.lang.String clientId, java.lang.Long localPersonId, java.lang.Long personId) {
      super(MyApi.this, "POST", REST_PATH, null, com.appspot.people_pinpoint.myApi.model.Person.class);
      this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
      this.localPersonId = com.google.api.client.util.Preconditions.checkNotNull(localPersonId, "Required parameter localPersonId must be specified.");
      this.personId = com.google.api.client.util.Preconditions.checkNotNull(personId, "Required parameter personId must be specified.");
    }

    @Override
    public CancelPerson setAlt(java.lang.String alt) {
      return (CancelPerson) super.setAlt(alt);
    }

    @Override
    public CancelPerson setFields(java.lang.String fields) {
      return (CancelPerson) super.setFields(fields);
    }

    @Override
    public CancelPerson setKey(java.lang.String key) {
      return (CancelPerson) super.setKey(key);
    }

    @Override
    public CancelPerson setOauthToken(java.lang.String oauthToken) {
      return (CancelPerson) super.setOauthToken(oauthToken);
    }

    @Override
    public CancelPerson setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CancelPerson) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CancelPerson setQuotaUser(java.lang.String quotaUser) {
      return (CancelPerson) super.setQuotaUser(quotaUser);
    }

    @Override
    public CancelPerson setUserIp(java.lang.String userIp) {
      return (CancelPerson) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String clientId;

    /**

     */
    public java.lang.String getClientId() {
      return clientId;
    }

    public CancelPerson setClientId(java.lang.String clientId) {
      this.clientId = clientId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long localPersonId;

    /**

     */
    public java.lang.Long getLocalPersonId() {
      return localPersonId;
    }

    public CancelPerson setLocalPersonId(java.lang.Long localPersonId) {
      this.localPersonId = localPersonId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long personId;

    /**

     */
    public java.lang.Long getPersonId() {
      return personId;
    }

    public CancelPerson setPersonId(java.lang.Long personId) {
      this.personId = personId;
      return this;
    }

    @Override
    public CancelPerson set(String parameterName, Object value) {
      return (CancelPerson) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "people".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link People#execute()} method to invoke the remote operation.
   *
   * @param clientId
   * @param localPersonId
   * @return the request
   */
  public People people(java.lang.String clientId, java.lang.Long localPersonId) throws java.io.IOException {
    People result = new People(clientId, localPersonId);
    initialize(result);
    return result;
  }

  public class People extends MyApiRequest<com.appspot.people_pinpoint.myApi.model.PersonCollection> {

    private static final String REST_PATH = "people/{clientId}/{localPersonId}";

    /**
     * Create a request for the method "people".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link People#execute()} method to invoke the remote operation. <p> {@link
     * People#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param clientId
     * @param localPersonId
     * @since 1.13
     */
    protected People(java.lang.String clientId, java.lang.Long localPersonId) {
      super(MyApi.this, "POST", REST_PATH, null, com.appspot.people_pinpoint.myApi.model.PersonCollection.class);
      this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
      this.localPersonId = com.google.api.client.util.Preconditions.checkNotNull(localPersonId, "Required parameter localPersonId must be specified.");
    }

    @Override
    public People setAlt(java.lang.String alt) {
      return (People) super.setAlt(alt);
    }

    @Override
    public People setFields(java.lang.String fields) {
      return (People) super.setFields(fields);
    }

    @Override
    public People setKey(java.lang.String key) {
      return (People) super.setKey(key);
    }

    @Override
    public People setOauthToken(java.lang.String oauthToken) {
      return (People) super.setOauthToken(oauthToken);
    }

    @Override
    public People setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (People) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public People setQuotaUser(java.lang.String quotaUser) {
      return (People) super.setQuotaUser(quotaUser);
    }

    @Override
    public People setUserIp(java.lang.String userIp) {
      return (People) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String clientId;

    /**

     */
    public java.lang.String getClientId() {
      return clientId;
    }

    public People setClientId(java.lang.String clientId) {
      this.clientId = clientId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long localPersonId;

    /**

     */
    public java.lang.Long getLocalPersonId() {
      return localPersonId;
    }

    public People setLocalPersonId(java.lang.Long localPersonId) {
      this.localPersonId = localPersonId;
      return this;
    }

    @Override
    public People set(String parameterName, Object value) {
      return (People) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "person".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link Person#execute()} method to invoke the remote operation.
   *
   * @param clientId
   * @param localPersonId
   * @return the request
   */
  public Person person(java.lang.String clientId, java.lang.Long localPersonId) throws java.io.IOException {
    Person result = new Person(clientId, localPersonId);
    initialize(result);
    return result;
  }

  public class Person extends MyApiRequest<com.appspot.people_pinpoint.myApi.model.Person> {

    private static final String REST_PATH = "person/{clientId}/{localPersonId}";

    /**
     * Create a request for the method "person".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link Person#execute()} method to invoke the remote operation. <p> {@link
     * Person#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param clientId
     * @param localPersonId
     * @since 1.13
     */
    protected Person(java.lang.String clientId, java.lang.Long localPersonId) {
      super(MyApi.this, "POST", REST_PATH, null, com.appspot.people_pinpoint.myApi.model.Person.class);
      this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
      this.localPersonId = com.google.api.client.util.Preconditions.checkNotNull(localPersonId, "Required parameter localPersonId must be specified.");
    }

    @Override
    public Person setAlt(java.lang.String alt) {
      return (Person) super.setAlt(alt);
    }

    @Override
    public Person setFields(java.lang.String fields) {
      return (Person) super.setFields(fields);
    }

    @Override
    public Person setKey(java.lang.String key) {
      return (Person) super.setKey(key);
    }

    @Override
    public Person setOauthToken(java.lang.String oauthToken) {
      return (Person) super.setOauthToken(oauthToken);
    }

    @Override
    public Person setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Person) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Person setQuotaUser(java.lang.String quotaUser) {
      return (Person) super.setQuotaUser(quotaUser);
    }

    @Override
    public Person setUserIp(java.lang.String userIp) {
      return (Person) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String clientId;

    /**

     */
    public java.lang.String getClientId() {
      return clientId;
    }

    public Person setClientId(java.lang.String clientId) {
      this.clientId = clientId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long localPersonId;

    /**

     */
    public java.lang.Long getLocalPersonId() {
      return localPersonId;
    }

    public Person setLocalPersonId(java.lang.Long localPersonId) {
      this.localPersonId = localPersonId;
      return this;
    }

    @Override
    public Person set(String parameterName, Object value) {
      return (Person) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "receivedPeople".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link ReceivedPeople#execute()} method to invoke the remote operation.
   *
   * @param clientId
   * @param localPersonId
   * @return the request
   */
  public ReceivedPeople receivedPeople(java.lang.String clientId, java.lang.Long localPersonId) throws java.io.IOException {
    ReceivedPeople result = new ReceivedPeople(clientId, localPersonId);
    initialize(result);
    return result;
  }

  public class ReceivedPeople extends MyApiRequest<com.appspot.people_pinpoint.myApi.model.PersonCollection> {

    private static final String REST_PATH = "receivedPeople/{clientId}/{localPersonId}";

    /**
     * Create a request for the method "receivedPeople".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link ReceivedPeople#execute()} method to invoke the remote operation.
     * <p> {@link ReceivedPeople#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
     * ientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param clientId
     * @param localPersonId
     * @since 1.13
     */
    protected ReceivedPeople(java.lang.String clientId, java.lang.Long localPersonId) {
      super(MyApi.this, "POST", REST_PATH, null, com.appspot.people_pinpoint.myApi.model.PersonCollection.class);
      this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
      this.localPersonId = com.google.api.client.util.Preconditions.checkNotNull(localPersonId, "Required parameter localPersonId must be specified.");
    }

    @Override
    public ReceivedPeople setAlt(java.lang.String alt) {
      return (ReceivedPeople) super.setAlt(alt);
    }

    @Override
    public ReceivedPeople setFields(java.lang.String fields) {
      return (ReceivedPeople) super.setFields(fields);
    }

    @Override
    public ReceivedPeople setKey(java.lang.String key) {
      return (ReceivedPeople) super.setKey(key);
    }

    @Override
    public ReceivedPeople setOauthToken(java.lang.String oauthToken) {
      return (ReceivedPeople) super.setOauthToken(oauthToken);
    }

    @Override
    public ReceivedPeople setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ReceivedPeople) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ReceivedPeople setQuotaUser(java.lang.String quotaUser) {
      return (ReceivedPeople) super.setQuotaUser(quotaUser);
    }

    @Override
    public ReceivedPeople setUserIp(java.lang.String userIp) {
      return (ReceivedPeople) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String clientId;

    /**

     */
    public java.lang.String getClientId() {
      return clientId;
    }

    public ReceivedPeople setClientId(java.lang.String clientId) {
      this.clientId = clientId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long localPersonId;

    /**

     */
    public java.lang.Long getLocalPersonId() {
      return localPersonId;
    }

    public ReceivedPeople setLocalPersonId(java.lang.Long localPersonId) {
      this.localPersonId = localPersonId;
      return this;
    }

    @Override
    public ReceivedPeople set(String parameterName, Object value) {
      return (ReceivedPeople) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "rejectPerson".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link RejectPerson#execute()} method to invoke the remote operation.
   *
   * @param clientId
   * @param localPersonId
   * @param personId
   * @return the request
   */
  public RejectPerson rejectPerson(java.lang.String clientId, java.lang.Long localPersonId, java.lang.Long personId) throws java.io.IOException {
    RejectPerson result = new RejectPerson(clientId, localPersonId, personId);
    initialize(result);
    return result;
  }

  public class RejectPerson extends MyApiRequest<com.appspot.people_pinpoint.myApi.model.Person> {

    private static final String REST_PATH = "rejectPerson/{clientId}/{localPersonId}/{personId}";

    /**
     * Create a request for the method "rejectPerson".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link RejectPerson#execute()} method to invoke the remote operation. <p>
     * {@link
     * RejectPerson#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param clientId
     * @param localPersonId
     * @param personId
     * @since 1.13
     */
    protected RejectPerson(java.lang.String clientId, java.lang.Long localPersonId, java.lang.Long personId) {
      super(MyApi.this, "POST", REST_PATH, null, com.appspot.people_pinpoint.myApi.model.Person.class);
      this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
      this.localPersonId = com.google.api.client.util.Preconditions.checkNotNull(localPersonId, "Required parameter localPersonId must be specified.");
      this.personId = com.google.api.client.util.Preconditions.checkNotNull(personId, "Required parameter personId must be specified.");
    }

    @Override
    public RejectPerson setAlt(java.lang.String alt) {
      return (RejectPerson) super.setAlt(alt);
    }

    @Override
    public RejectPerson setFields(java.lang.String fields) {
      return (RejectPerson) super.setFields(fields);
    }

    @Override
    public RejectPerson setKey(java.lang.String key) {
      return (RejectPerson) super.setKey(key);
    }

    @Override
    public RejectPerson setOauthToken(java.lang.String oauthToken) {
      return (RejectPerson) super.setOauthToken(oauthToken);
    }

    @Override
    public RejectPerson setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RejectPerson) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RejectPerson setQuotaUser(java.lang.String quotaUser) {
      return (RejectPerson) super.setQuotaUser(quotaUser);
    }

    @Override
    public RejectPerson setUserIp(java.lang.String userIp) {
      return (RejectPerson) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String clientId;

    /**

     */
    public java.lang.String getClientId() {
      return clientId;
    }

    public RejectPerson setClientId(java.lang.String clientId) {
      this.clientId = clientId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long localPersonId;

    /**

     */
    public java.lang.Long getLocalPersonId() {
      return localPersonId;
    }

    public RejectPerson setLocalPersonId(java.lang.Long localPersonId) {
      this.localPersonId = localPersonId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long personId;

    /**

     */
    public java.lang.Long getPersonId() {
      return personId;
    }

    public RejectPerson setPersonId(java.lang.Long personId) {
      this.personId = personId;
      return this;
    }

    @Override
    public RejectPerson set(String parameterName, Object value) {
      return (RejectPerson) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removePerson".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link RemovePerson#execute()} method to invoke the remote operation.
   *
   * @param clientId
   * @param localPersonId
   * @param personId
   * @return the request
   */
  public RemovePerson removePerson(java.lang.String clientId, java.lang.Long localPersonId, java.lang.Long personId) throws java.io.IOException {
    RemovePerson result = new RemovePerson(clientId, localPersonId, personId);
    initialize(result);
    return result;
  }

  public class RemovePerson extends MyApiRequest<com.appspot.people_pinpoint.myApi.model.Person> {

    private static final String REST_PATH = "person/{clientId}/{localPersonId}/{personId}";

    /**
     * Create a request for the method "removePerson".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link RemovePerson#execute()} method to invoke the remote operation. <p>
     * {@link
     * RemovePerson#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param clientId
     * @param localPersonId
     * @param personId
     * @since 1.13
     */
    protected RemovePerson(java.lang.String clientId, java.lang.Long localPersonId, java.lang.Long personId) {
      super(MyApi.this, "DELETE", REST_PATH, null, com.appspot.people_pinpoint.myApi.model.Person.class);
      this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
      this.localPersonId = com.google.api.client.util.Preconditions.checkNotNull(localPersonId, "Required parameter localPersonId must be specified.");
      this.personId = com.google.api.client.util.Preconditions.checkNotNull(personId, "Required parameter personId must be specified.");
    }

    @Override
    public RemovePerson setAlt(java.lang.String alt) {
      return (RemovePerson) super.setAlt(alt);
    }

    @Override
    public RemovePerson setFields(java.lang.String fields) {
      return (RemovePerson) super.setFields(fields);
    }

    @Override
    public RemovePerson setKey(java.lang.String key) {
      return (RemovePerson) super.setKey(key);
    }

    @Override
    public RemovePerson setOauthToken(java.lang.String oauthToken) {
      return (RemovePerson) super.setOauthToken(oauthToken);
    }

    @Override
    public RemovePerson setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemovePerson) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemovePerson setQuotaUser(java.lang.String quotaUser) {
      return (RemovePerson) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemovePerson setUserIp(java.lang.String userIp) {
      return (RemovePerson) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String clientId;

    /**

     */
    public java.lang.String getClientId() {
      return clientId;
    }

    public RemovePerson setClientId(java.lang.String clientId) {
      this.clientId = clientId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long localPersonId;

    /**

     */
    public java.lang.Long getLocalPersonId() {
      return localPersonId;
    }

    public RemovePerson setLocalPersonId(java.lang.Long localPersonId) {
      this.localPersonId = localPersonId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long personId;

    /**

     */
    public java.lang.Long getPersonId() {
      return personId;
    }

    public RemovePerson setPersonId(java.lang.Long personId) {
      this.personId = personId;
      return this;
    }

    @Override
    public RemovePerson set(String parameterName, Object value) {
      return (RemovePerson) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "searchPeople".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link SearchPeople#execute()} method to invoke the remote operation.
   *
   * @param clientId
   * @param queryString
   * @param localPersonId
   * @return the request
   */
  public SearchPeople searchPeople(java.lang.String clientId, java.lang.String queryString, java.lang.Long localPersonId) throws java.io.IOException {
    SearchPeople result = new SearchPeople(clientId, queryString, localPersonId);
    initialize(result);
    return result;
  }

  public class SearchPeople extends MyApiRequest<com.appspot.people_pinpoint.myApi.model.PersonCollection> {

    private static final String REST_PATH = "searchPeople/{clientId}/{queryString}/{localPersonId}";

    /**
     * Create a request for the method "searchPeople".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link SearchPeople#execute()} method to invoke the remote operation. <p>
     * {@link
     * SearchPeople#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param clientId
     * @param queryString
     * @param localPersonId
     * @since 1.13
     */
    protected SearchPeople(java.lang.String clientId, java.lang.String queryString, java.lang.Long localPersonId) {
      super(MyApi.this, "POST", REST_PATH, null, com.appspot.people_pinpoint.myApi.model.PersonCollection.class);
      this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
      this.queryString = com.google.api.client.util.Preconditions.checkNotNull(queryString, "Required parameter queryString must be specified.");
      this.localPersonId = com.google.api.client.util.Preconditions.checkNotNull(localPersonId, "Required parameter localPersonId must be specified.");
    }

    @Override
    public SearchPeople setAlt(java.lang.String alt) {
      return (SearchPeople) super.setAlt(alt);
    }

    @Override
    public SearchPeople setFields(java.lang.String fields) {
      return (SearchPeople) super.setFields(fields);
    }

    @Override
    public SearchPeople setKey(java.lang.String key) {
      return (SearchPeople) super.setKey(key);
    }

    @Override
    public SearchPeople setOauthToken(java.lang.String oauthToken) {
      return (SearchPeople) super.setOauthToken(oauthToken);
    }

    @Override
    public SearchPeople setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SearchPeople) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SearchPeople setQuotaUser(java.lang.String quotaUser) {
      return (SearchPeople) super.setQuotaUser(quotaUser);
    }

    @Override
    public SearchPeople setUserIp(java.lang.String userIp) {
      return (SearchPeople) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String clientId;

    /**

     */
    public java.lang.String getClientId() {
      return clientId;
    }

    public SearchPeople setClientId(java.lang.String clientId) {
      this.clientId = clientId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String queryString;

    /**

     */
    public java.lang.String getQueryString() {
      return queryString;
    }

    public SearchPeople setQueryString(java.lang.String queryString) {
      this.queryString = queryString;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long localPersonId;

    /**

     */
    public java.lang.Long getLocalPersonId() {
      return localPersonId;
    }

    public SearchPeople setLocalPersonId(java.lang.Long localPersonId) {
      this.localPersonId = localPersonId;
      return this;
    }

    @Override
    public SearchPeople set(String parameterName, Object value) {
      return (SearchPeople) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "sentPeople".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link SentPeople#execute()} method to invoke the remote operation.
   *
   * @param clientId
   * @param localPersonId
   * @return the request
   */
  public SentPeople sentPeople(java.lang.String clientId, java.lang.Long localPersonId) throws java.io.IOException {
    SentPeople result = new SentPeople(clientId, localPersonId);
    initialize(result);
    return result;
  }

  public class SentPeople extends MyApiRequest<com.appspot.people_pinpoint.myApi.model.PersonCollection> {

    private static final String REST_PATH = "sentPeople/{clientId}/{localPersonId}";

    /**
     * Create a request for the method "sentPeople".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link SentPeople#execute()} method to invoke the remote operation. <p>
     * {@link
     * SentPeople#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param clientId
     * @param localPersonId
     * @since 1.13
     */
    protected SentPeople(java.lang.String clientId, java.lang.Long localPersonId) {
      super(MyApi.this, "POST", REST_PATH, null, com.appspot.people_pinpoint.myApi.model.PersonCollection.class);
      this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
      this.localPersonId = com.google.api.client.util.Preconditions.checkNotNull(localPersonId, "Required parameter localPersonId must be specified.");
    }

    @Override
    public SentPeople setAlt(java.lang.String alt) {
      return (SentPeople) super.setAlt(alt);
    }

    @Override
    public SentPeople setFields(java.lang.String fields) {
      return (SentPeople) super.setFields(fields);
    }

    @Override
    public SentPeople setKey(java.lang.String key) {
      return (SentPeople) super.setKey(key);
    }

    @Override
    public SentPeople setOauthToken(java.lang.String oauthToken) {
      return (SentPeople) super.setOauthToken(oauthToken);
    }

    @Override
    public SentPeople setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SentPeople) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SentPeople setQuotaUser(java.lang.String quotaUser) {
      return (SentPeople) super.setQuotaUser(quotaUser);
    }

    @Override
    public SentPeople setUserIp(java.lang.String userIp) {
      return (SentPeople) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String clientId;

    /**

     */
    public java.lang.String getClientId() {
      return clientId;
    }

    public SentPeople setClientId(java.lang.String clientId) {
      this.clientId = clientId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long localPersonId;

    /**

     */
    public java.lang.Long getLocalPersonId() {
      return localPersonId;
    }

    public SentPeople setLocalPersonId(java.lang.Long localPersonId) {
      this.localPersonId = localPersonId;
      return this;
    }

    @Override
    public SentPeople set(String parameterName, Object value) {
      return (SentPeople) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "signInPerson".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link SignInPerson#execute()} method to invoke the remote operation.
   *
   * @param clientId
   * @param email
   * @param password
   * @return the request
   */
  public SignInPerson signInPerson(java.lang.String clientId, java.lang.String email, java.lang.String password) throws java.io.IOException {
    SignInPerson result = new SignInPerson(clientId, email, password);
    initialize(result);
    return result;
  }

  public class SignInPerson extends MyApiRequest<com.appspot.people_pinpoint.myApi.model.Person> {

    private static final String REST_PATH = "signInPerson/{clientId}/{email}/{password}";

    /**
     * Create a request for the method "signInPerson".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link SignInPerson#execute()} method to invoke the remote operation. <p>
     * {@link
     * SignInPerson#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param clientId
     * @param email
     * @param password
     * @since 1.13
     */
    protected SignInPerson(java.lang.String clientId, java.lang.String email, java.lang.String password) {
      super(MyApi.this, "POST", REST_PATH, null, com.appspot.people_pinpoint.myApi.model.Person.class);
      this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.password = com.google.api.client.util.Preconditions.checkNotNull(password, "Required parameter password must be specified.");
    }

    @Override
    public SignInPerson setAlt(java.lang.String alt) {
      return (SignInPerson) super.setAlt(alt);
    }

    @Override
    public SignInPerson setFields(java.lang.String fields) {
      return (SignInPerson) super.setFields(fields);
    }

    @Override
    public SignInPerson setKey(java.lang.String key) {
      return (SignInPerson) super.setKey(key);
    }

    @Override
    public SignInPerson setOauthToken(java.lang.String oauthToken) {
      return (SignInPerson) super.setOauthToken(oauthToken);
    }

    @Override
    public SignInPerson setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SignInPerson) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SignInPerson setQuotaUser(java.lang.String quotaUser) {
      return (SignInPerson) super.setQuotaUser(quotaUser);
    }

    @Override
    public SignInPerson setUserIp(java.lang.String userIp) {
      return (SignInPerson) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String clientId;

    /**

     */
    public java.lang.String getClientId() {
      return clientId;
    }

    public SignInPerson setClientId(java.lang.String clientId) {
      this.clientId = clientId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public SignInPerson setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String password;

    /**

     */
    public java.lang.String getPassword() {
      return password;
    }

    public SignInPerson setPassword(java.lang.String password) {
      this.password = password;
      return this;
    }

    @Override
    public SignInPerson set(String parameterName, Object value) {
      return (SignInPerson) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "signUpPerson".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link SignUpPerson#execute()} method to invoke the remote operation.
   *
   * @param clientId
   * @param name
   * @param email
   * @param password
   * @return the request
   */
  public SignUpPerson signUpPerson(java.lang.String clientId, java.lang.String name, java.lang.String email, java.lang.String password) throws java.io.IOException {
    SignUpPerson result = new SignUpPerson(clientId, name, email, password);
    initialize(result);
    return result;
  }

  public class SignUpPerson extends MyApiRequest<com.appspot.people_pinpoint.myApi.model.Person> {

    private static final String REST_PATH = "signUpPerson/{clientId}/{name}/{email}/{password}";

    /**
     * Create a request for the method "signUpPerson".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link SignUpPerson#execute()} method to invoke the remote operation. <p>
     * {@link
     * SignUpPerson#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param clientId
     * @param name
     * @param email
     * @param password
     * @since 1.13
     */
    protected SignUpPerson(java.lang.String clientId, java.lang.String name, java.lang.String email, java.lang.String password) {
      super(MyApi.this, "POST", REST_PATH, null, com.appspot.people_pinpoint.myApi.model.Person.class);
      this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.password = com.google.api.client.util.Preconditions.checkNotNull(password, "Required parameter password must be specified.");
    }

    @Override
    public SignUpPerson setAlt(java.lang.String alt) {
      return (SignUpPerson) super.setAlt(alt);
    }

    @Override
    public SignUpPerson setFields(java.lang.String fields) {
      return (SignUpPerson) super.setFields(fields);
    }

    @Override
    public SignUpPerson setKey(java.lang.String key) {
      return (SignUpPerson) super.setKey(key);
    }

    @Override
    public SignUpPerson setOauthToken(java.lang.String oauthToken) {
      return (SignUpPerson) super.setOauthToken(oauthToken);
    }

    @Override
    public SignUpPerson setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SignUpPerson) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SignUpPerson setQuotaUser(java.lang.String quotaUser) {
      return (SignUpPerson) super.setQuotaUser(quotaUser);
    }

    @Override
    public SignUpPerson setUserIp(java.lang.String userIp) {
      return (SignUpPerson) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String clientId;

    /**

     */
    public java.lang.String getClientId() {
      return clientId;
    }

    public SignUpPerson setClientId(java.lang.String clientId) {
      this.clientId = clientId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public SignUpPerson setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public SignUpPerson setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String password;

    /**

     */
    public java.lang.String getPassword() {
      return password;
    }

    public SignUpPerson setPassword(java.lang.String password) {
      this.password = password;
      return this;
    }

    @Override
    public SignUpPerson set(String parameterName, Object value) {
      return (SignUpPerson) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updatePersonLocation".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link UpdatePersonLocation#execute()} method to invoke the remote
   * operation.
   *
   * @param clientId
   * @param localPersonId
   * @param latitude
   * @param longitude
   * @param locationUpdateTime
   * @return the request
   */
  public UpdatePersonLocation updatePersonLocation(java.lang.String clientId, java.lang.Long localPersonId, java.lang.Double latitude, java.lang.Double longitude, java.lang.Long locationUpdateTime) throws java.io.IOException {
    UpdatePersonLocation result = new UpdatePersonLocation(clientId, localPersonId, latitude, longitude, locationUpdateTime);
    initialize(result);
    return result;
  }

  public class UpdatePersonLocation extends MyApiRequest<Void> {

    private static final String REST_PATH = "void/{clientId}/{localPersonId}/{latitude}/{longitude}/{locationUpdateTime}";

    /**
     * Create a request for the method "updatePersonLocation".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link UpdatePersonLocation#execute()} method to invoke the remote
     * operation. <p> {@link UpdatePersonLocation#initialize(com.google.api.client.googleapis.services
     * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param clientId
     * @param localPersonId
     * @param latitude
     * @param longitude
     * @param locationUpdateTime
     * @since 1.13
     */
    protected UpdatePersonLocation(java.lang.String clientId, java.lang.Long localPersonId, java.lang.Double latitude, java.lang.Double longitude, java.lang.Long locationUpdateTime) {
      super(MyApi.this, "PUT", REST_PATH, null, Void.class);
      this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
      this.localPersonId = com.google.api.client.util.Preconditions.checkNotNull(localPersonId, "Required parameter localPersonId must be specified.");
      this.latitude = com.google.api.client.util.Preconditions.checkNotNull(latitude, "Required parameter latitude must be specified.");
      this.longitude = com.google.api.client.util.Preconditions.checkNotNull(longitude, "Required parameter longitude must be specified.");
      this.locationUpdateTime = com.google.api.client.util.Preconditions.checkNotNull(locationUpdateTime, "Required parameter locationUpdateTime must be specified.");
    }

    @Override
    public UpdatePersonLocation setAlt(java.lang.String alt) {
      return (UpdatePersonLocation) super.setAlt(alt);
    }

    @Override
    public UpdatePersonLocation setFields(java.lang.String fields) {
      return (UpdatePersonLocation) super.setFields(fields);
    }

    @Override
    public UpdatePersonLocation setKey(java.lang.String key) {
      return (UpdatePersonLocation) super.setKey(key);
    }

    @Override
    public UpdatePersonLocation setOauthToken(java.lang.String oauthToken) {
      return (UpdatePersonLocation) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdatePersonLocation setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdatePersonLocation) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdatePersonLocation setQuotaUser(java.lang.String quotaUser) {
      return (UpdatePersonLocation) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdatePersonLocation setUserIp(java.lang.String userIp) {
      return (UpdatePersonLocation) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String clientId;

    /**

     */
    public java.lang.String getClientId() {
      return clientId;
    }

    public UpdatePersonLocation setClientId(java.lang.String clientId) {
      this.clientId = clientId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long localPersonId;

    /**

     */
    public java.lang.Long getLocalPersonId() {
      return localPersonId;
    }

    public UpdatePersonLocation setLocalPersonId(java.lang.Long localPersonId) {
      this.localPersonId = localPersonId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double latitude;

    /**

     */
    public java.lang.Double getLatitude() {
      return latitude;
    }

    public UpdatePersonLocation setLatitude(java.lang.Double latitude) {
      this.latitude = latitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double longitude;

    /**

     */
    public java.lang.Double getLongitude() {
      return longitude;
    }

    public UpdatePersonLocation setLongitude(java.lang.Double longitude) {
      this.longitude = longitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long locationUpdateTime;

    /**

     */
    public java.lang.Long getLocationUpdateTime() {
      return locationUpdateTime;
    }

    public UpdatePersonLocation setLocationUpdateTime(java.lang.Long locationUpdateTime) {
      this.locationUpdateTime = locationUpdateTime;
      return this;
    }

    @Override
    public UpdatePersonLocation set(String parameterName, Object value) {
      return (UpdatePersonLocation) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link MyApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link MyApi}. */
    @Override
    public MyApi build() {
      return new MyApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link MyApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setMyApiRequestInitializer(
        MyApiRequestInitializer myapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(myapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
